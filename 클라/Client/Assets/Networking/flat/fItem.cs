// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::FlatBuffers;

public struct fItem : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static fItem GetRootAsfItem(ByteBuffer _bb) { return GetRootAsfItem(_bb, new fItem()); }
  public static fItem GetRootAsfItem(ByteBuffer _bb, fItem obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public fItem __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Class CType { get { int o = __p.__offset(4); return o != 0 ? (Class)__p.bb.GetInt(o + __p.bb_pos) : Class.Base; } }
  public int Id { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string Name { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(8); }
  public int Type { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Val1 { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Val2 { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Val3 { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Val4 { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Val5 { get { int o = __p.__offset(20); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Val6 { get { int o = __p.__offset(22); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Val7 { get { int o = __p.__offset(24); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Val8 { get { int o = __p.__offset(26); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Count { get { int o = __p.__offset(28); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<fItem> CreatefItem(FlatBufferBuilder builder,
      Class cType = Class.Base,
      int id = 0,
      StringOffset nameOffset = default(StringOffset),
      int type = 0,
      int val1 = 0,
      int val2 = 0,
      int val3 = 0,
      int val4 = 0,
      int val5 = 0,
      int val6 = 0,
      int val7 = 0,
      int val8 = 0,
      int count = 0) {
    builder.StartObject(13);
    fItem.AddCount(builder, count);
    fItem.AddVal8(builder, val8);
    fItem.AddVal7(builder, val7);
    fItem.AddVal6(builder, val6);
    fItem.AddVal5(builder, val5);
    fItem.AddVal4(builder, val4);
    fItem.AddVal3(builder, val3);
    fItem.AddVal2(builder, val2);
    fItem.AddVal1(builder, val1);
    fItem.AddType(builder, type);
    fItem.AddName(builder, nameOffset);
    fItem.AddId(builder, id);
    fItem.AddCType(builder, cType);
    return fItem.EndfItem(builder);
  }

  public static void StartfItem(FlatBufferBuilder builder) { builder.StartObject(13); }
  public static void AddCType(FlatBufferBuilder builder, Class cType) { builder.AddInt(0, (int)cType, 0); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(1, id, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(2, nameOffset.Value, 0); }
  public static void AddType(FlatBufferBuilder builder, int type) { builder.AddInt(3, type, 0); }
  public static void AddVal1(FlatBufferBuilder builder, int val1) { builder.AddInt(4, val1, 0); }
  public static void AddVal2(FlatBufferBuilder builder, int val2) { builder.AddInt(5, val2, 0); }
  public static void AddVal3(FlatBufferBuilder builder, int val3) { builder.AddInt(6, val3, 0); }
  public static void AddVal4(FlatBufferBuilder builder, int val4) { builder.AddInt(7, val4, 0); }
  public static void AddVal5(FlatBufferBuilder builder, int val5) { builder.AddInt(8, val5, 0); }
  public static void AddVal6(FlatBufferBuilder builder, int val6) { builder.AddInt(9, val6, 0); }
  public static void AddVal7(FlatBufferBuilder builder, int val7) { builder.AddInt(10, val7, 0); }
  public static void AddVal8(FlatBufferBuilder builder, int val8) { builder.AddInt(11, val8, 0); }
  public static void AddCount(FlatBufferBuilder builder, int count) { builder.AddInt(12, count, 0); }
  public static Offset<fItem> EndfItem(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<fItem>(o);
  }
};

